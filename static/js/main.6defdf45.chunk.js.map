{"version":3,"sources":["assets/images/ipad-mini.jpg","redux/reducers.js","redux/actionTypes.js","redux/store.js","components/Title.js","components/Foot.js","components/Content.js","containers/App.js","redux/actions.js","index.js"],"names":["module","exports","defaultState","ipadInfos","pending","errorMessage","combineReducers","contentReducer","state","action","type","toggleReducer","contentToggle","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","Title","expandContent","this","props","className","title","onClick","Component","Foot","currentIndex","contentList","handlePreNext","lengthOfContent","length","href","Content","src","ipadmini","dangerouslySetInnerHTML","__html","content","description","App","switchContentToggle","clickType","setState","getIpadInfos","mapDispatchToProps","dispatch","a","axios","get","result","data","JSON","stringify","connect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6defdf45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ipad-mini.27ac1ac9.jpg\";","import {\r\n  GET_IPAD_INFOS_START,\r\n  GET_IPAD_INFOS_SUCCESS,\r\n  GET_IPAD_INFOS_FAILED,\r\n  SHOW_HIDE_CONTENT\r\n} from './actionTypes'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst defaultState = {\r\n  ipadInfos: [],\r\n  pending: false,\r\n  errorMessage: ''\r\n}\r\n\r\nfunction contentReducer (state = defaultState, action) {\r\n  switch (action.type) {\r\n    case GET_IPAD_INFOS_START:\r\n      return {\r\n        ...state,\r\n        pending: true\r\n      }\r\n    case GET_IPAD_INFOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        ipadInfos: { ...action.ipadInfos }\r\n      }\r\n    case GET_IPAD_INFOS_FAILED:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        errorMessage: action.errorMessage\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\nfunction toggleReducer (state = { contentToggle: true }, action) {\r\n  switch (action.type) {\r\n    case SHOW_HIDE_CONTENT:\r\n      return { ...state, contentToggle: !state.contentToggle }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  contentReducer,\r\n  toggleReducer\r\n})\r\n","export const GET_IPAD_INFOS_START = 'GET_IPAD_INFOS_START'\r\nexport const GET_IPAD_INFOS_SUCCESS = 'GET_IPAD_INFOS_SUCCESS'\r\nexport const GET_IPAD_INFOS_FAILED = 'GET_IPAD_INFOS_FAILED'\r\nexport const SHOW_HIDE_CONTENT = 'SHOW_HIDE_CONTENT'\r\n","\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reducers from './reducers'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n\r\n","import React, { Component } from 'react'\r\nimport '../assets/css/title.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Title extends Component {\r\n  render () {\r\n    const { expandContent } = this.props\r\n    return (\r\n      <div className='top'>\r\n        <h1>{this.props.title}</h1>\r\n        <div>\r\n          <div onClick= {() => expandContent()} className='top__icon'></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTitle.propTypes = {\r\n  expandContent: PropTypes.func.isRequired\r\n}\r\nexport default Title\r\n","import React, { Component } from 'react'\r\nimport '../assets/css/foot.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Foot extends Component {\r\n  render () {\r\n    const {  currentIndex, contentList, handlePreNext } = this.props\r\n    const lengthOfContent = contentList?.length\r\n    return (\r\n      <div className='footcontainer'>\r\n        <div className='foot'>\r\n          <button onClick={() => handlePreNext('left')} className='leftarrow'></button>\r\n          <a href='#' onClick={() => handlePreNext('left')}>\r\n            {\r\n              (currentIndex === 0)\r\n                ? 'Prev'\r\n                : contentList[currentIndex - 1].title\r\n            }\r\n          </a>\r\n        </div>\r\n        <div className='foot'>\r\n\r\n          <a href='#' onClick={() => handlePreNext('right')}>\r\n            {\r\n              (contentList && currentIndex === (lengthOfContent - 1))\r\n                ? 'Next'\r\n                : contentList && contentList[currentIndex + 1].title\r\n            }\r\n          </a>\r\n          <button onClick={() => handlePreNext('right')} className='rightarrow'></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFoot.propTypes = {\r\n  currentIndex: PropTypes.number.isRequired,\r\n  contentList: PropTypes.array.isRequired,\r\n  handlePreNext: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Foot\r\n","\r\nimport React from 'react'\r\nimport '../assets/css/content.scss'\r\nimport ipadmini from '../assets/images/ipad-mini.jpg'\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div className='content'>\r\n      <img src={ipadmini} className='photo'/>\r\n      <div className='content-text' dangerouslySetInnerHTML={{ __html: props.content?.description }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React, {Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getIpadInfos, switchContentToggle } from '../redux/actions'\r\nimport Title from '../components/Title'\r\nimport Foot from '../components/Foot'\r\nimport Content from '../components/Content'\r\nimport'../assets/css/App.scss'\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            currentIndex: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.props.getIpadInfos()\r\n    }\r\n\r\n    expandContent =() => {\r\n       const contentToggle = this.props.contentToggle\r\n       this.props.switchContentToggle(contentToggle)\r\n    }\r\n \r\n/* turn page over by click direction btn to change state\r\n * @param clickType\r\n * @type left/right \r\n * condition init pageIndex from state/length of the content array\r\n*/\r\n    handlePreNext = (clickType) => {\r\n        const {currentIndex} = this.state\r\n        if (clickType === 'left') {\r\n            if (currentIndex > 0) {\r\n                this.setState({currentIndex: currentIndex-1})\r\n            }\r\n        }\r\n        else if (clickType === 'right') {\r\n            if (currentIndex < ( this.props.ipadInfos?.content?.length -1 )) {\r\n                this.setState({currentIndex: currentIndex+1})\r\n            }\r\n        }\r\n    }\r\n \r\n    render() {\r\n        const {  currentIndex } = this.state\r\n        const { ipadInfos, contentToggle } = this.props\r\n        return (\r\n        <div className='app'>\r\n            <Title expandContent={this.expandContent} title={ipadInfos.title} contentToggle={contentToggle}/>\r\n            <div className={contentToggle? 'show' : 'hide'}>\r\n            <Content content={ipadInfos?.content && ipadInfos?.content[currentIndex]}/>\r\n            </div>\r\n            <Foot currentIndex={currentIndex}  contentList={ipadInfos?.content} handlePreNext={this.handlePreNext}/>\r\n        </div>\r\n        )\r\n    }      \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ipadInfos: state.contentReducer.ipadInfos,\r\n    contentToggle: state.toggleReducer.contentToggle\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getIpadInfos: getIpadInfos,\r\n    switchContentToggle: switchContentToggle\r\n}\r\n\r\nApp.propTypes = {\r\n    ipadInfos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import {\r\n  GET_IPAD_INFOS_START,\r\n  GET_IPAD_INFOS_SUCCESS,\r\n  GET_IPAD_INFOS_FAILED,\r\n  SHOW_HIDE_CONTENT\r\n} from './actionTypes'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const getIpadInfos = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: GET_IPAD_INFOS_START\r\n    })\r\n    try {\r\n      const result = await axios.get('./content.json')\r\n      dispatch({\r\n        type: GET_IPAD_INFOS_SUCCESS,\r\n        ipadInfos: result.data\r\n      })\r\n    } catch (e) {\r\n      dispatch({\r\n        type: GET_IPAD_INFOS_FAILED,\r\n        errorMessage: JSON.stringify(e)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const switchContentToggle = (contentToggle) => ({ type: SHOW_HIDE_CONTENT, data: contentToggle })\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './containers/App'\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))\r\n"],"sourceRoot":""}